[2024-05-06 16:53:51,556] [INFO] Service apiRest registered successfully
[2024-05-06 16:53:51,561] [ERROR] Exception on /register [POST]
Traceback (most recent call last):
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\flask\app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\flask\app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\app.py", line 94, in register_service
    update_scheduler()  # Actualizar el programador de tareas
    ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\app.py", line 52, in update_scheduler
    scheduler.add_job(check_service_health, 'interval', seconds=service['frequency'],
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\apscheduler\schedulers\base.py", line 434, in add_job
    'trigger': self._create_trigger(trigger, trigger_args),
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\apscheduler\schedulers\base.py", line 935, in _create_trigger
    return self._create_plugin_instance('trigger', trigger, trigger_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\apscheduler\schedulers\base.py", line 920, in _create_plugin_instance
    return plugin_cls(**constructor_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Usuario\Documents\Repositorios\Talleres\UQ_Microservicios\health_monitoring_microservice\.venv\Lib\site-packages\apscheduler\triggers\interval.py", line 32, in __init__
    self.interval = timedelta(weeks=weeks, days=days, hours=hours, minutes=minutes,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unsupported type for timedelta seconds component: str
[2024-05-06 16:54:32,459] [INFO] Service apiRest registered successfully
[2024-05-06 16:54:42,476] [INFO] Service health check
[2024-05-06 16:54:52,484] [INFO] Service health check
[2024-05-06 16:55:02,487] [INFO] Service health check
